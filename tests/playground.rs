extern crate yrs;
// use yrs::{DeepObservable, Doc, Transact, XmlFragmentPrelim, XmlFragment, XmlTextPrelim};
use yrs::{DeepObservable, Doc, Transact, Update};
use yrs::updates::decoder::Decode;
use yrs::types::{Event, Delta};

fn main() {
    println!("starting main");

    let doc = Doc::new();
    let mut root = doc.get_or_insert_xml_fragment("root");

    // it would be nicer to do the same thing we do in JS and do the update first, then get the root, then call root.to_delta
    // but root.to_delta doesn't exist
    // not sure if I'm missing something or if we need to do it the way below with observing
    root.observe_deep(|_txn, events| {
        // is this function getting called as expected?
        println!("observer triggered");

        // TODO type error
        for event in events {
            if let Event::Text(textEvent) = event {
                println!("TextEvent");

                // ignoring the current_target and target, not sure we need them

                // TODO fix type error
                for delta in textEvent.delta {
                    if let Delta::Inserted(value, attrs) = delta {
                        println!("{:?}", value);
                        println!("{:?}", attrs);
                        // TODO get this info of this nested business
                        // TODO call process function recursively on this value
                    } else {
                        println!("wasn't expecting this delta");
                    }
                }
            } else {
                println!("wasn't expecting this event");
            }
        }
    });

    let mut txn = doc.transact_mut();
    const RAW_LEXICAL_STATE_AS_UPDATE: &[u8] = &[1, 97, 156, 181, 228, 207, 14, 0, 40, 1, 4, 114, 111, 111, 116, 5, 95, 95, 100, 105, 114, 1, 119, 3, 108, 116, 114, 7, 1, 4, 114, 111, 111, 116, 6, 40, 0, 156, 181, 228, 207, 14, 1, 6, 95, 95, 116, 121, 112, 101, 1, 119, 9, 112, 97, 114, 97, 103, 114, 97, 112, 104, 40, 0, 156, 181, 228, 207, 14, 1, 8, 95, 95, 102, 111, 114, 109, 97, 116, 1, 125, 0, 40, 0, 156, 181, 228, 207, 14, 1, 8, 95, 95, 105, 110, 100, 101, 110, 116, 1, 125, 0, 40, 0, 156, 181, 228, 207, 14, 1, 5, 95, 95, 100, 105, 114, 1, 119, 3, 108, 116, 114, 7, 0, 156, 181, 228, 207, 14, 1, 1, 40, 0, 156, 181, 228, 207, 14, 6, 6, 95, 95, 116, 121, 112, 101, 1, 119, 4, 116, 101, 120, 116, 40, 0, 156, 181, 228, 207, 14, 6, 8, 95, 95, 102, 111, 114, 109, 97, 116, 1, 125, 0, 40, 0, 156, 181, 228, 207, 14, 6, 7, 95, 95, 115, 116, 121, 108, 101, 1, 119, 0, 40, 0, 156, 181, 228, 207, 14, 6, 6, 95, 95, 109, 111, 100, 101, 1, 125, 0, 40, 0, 156, 181, 228, 207, 14, 6, 8, 95, 95, 100, 101, 116, 97, 105, 108, 1, 125, 0, 132, 156, 181, 228, 207, 14, 6, 1, 97, 135, 156, 181, 228, 207, 14, 1, 6, 40, 0, 156, 181, 228, 207, 14, 13, 6, 95, 95, 116, 121, 112, 101, 1, 119, 4, 108, 105, 115, 116, 40, 0, 156, 181, 228, 207, 14, 13, 8, 95, 95, 102, 111, 114, 109, 97, 116, 1, 125, 0, 40, 0, 156, 181, 228, 207, 14, 13, 8, 95, 95, 105, 110, 100, 101, 110, 116, 1, 125, 0, 33, 0, 156, 181, 228, 207, 14, 13, 5, 95, 95, 100, 105, 114, 1, 40, 0, 156, 181, 228, 207, 14, 13, 10, 95, 95, 108, 105, 115, 116, 84, 121, 112, 101, 1, 119, 6, 110, 117, 109, 98, 101, 114, 40, 0, 156, 181, 228, 207, 14, 13, 5, 95, 95, 116, 97, 103, 1, 119, 2, 111, 108, 40, 0, 156, 181, 228, 207, 14, 13, 7, 95, 95, 115, 116, 97, 114, 116, 1, 125, 1, 7, 0, 156, 181, 228, 207, 14, 13, 6, 40, 0, 156, 181, 228, 207, 14, 21, 6, 95, 95, 116, 121, 112, 101, 1, 119, 8, 108, 105, 115, 116, 105, 116, 101, 109, 40, 0, 156, 181, 228, 207, 14, 21, 8, 95, 95, 102, 111, 114, 109, 97, 116, 1, 125, 0, 40, 0, 156, 181, 228, 207, 14, 21, 8, 95, 95, 105, 110, 100, 101, 110, 116, 1, 125, 0, 33, 0, 156, 181, 228, 207, 14, 21, 5, 95, 95, 100, 105, 114, 1, 40, 0, 156, 181, 228, 207, 14, 21, 7, 95, 95, 118, 97, 108, 117, 101, 1, 125, 1, 1, 0, 156, 181, 228, 207, 14, 21, 1, 0, 5, 129, 156, 181, 228, 207, 14, 27, 1, 132, 156, 181, 228, 207, 14, 12, 1, 32, 135, 156, 181, 228, 207, 14, 34, 1, 40, 0, 156, 181, 228, 207, 14, 35, 6, 95, 95, 116, 121, 112, 101, 1, 119, 4, 116, 101, 120, 116, 40, 0, 156, 181, 228, 207, 14, 35, 8, 95, 95, 102, 111, 114, 109, 97, 116, 1, 125, 1, 40, 0, 156, 181, 228, 207, 14, 35, 7, 95, 95, 115, 116, 121, 108, 101, 1, 119, 0, 40, 0, 156, 181, 228, 207, 14, 35, 6, 95, 95, 109, 111, 100, 101, 1, 125, 0, 40, 0, 156, 181, 228, 207, 14, 35, 8, 95, 95, 100, 101, 116, 97, 105, 108, 1, 125, 0, 132, 156, 181, 228, 207, 14, 35, 1, 98, 161, 156, 181, 228, 207, 14, 17, 1, 161, 156, 181, 228, 207, 14, 25, 1, 168, 156, 181, 228, 207, 14, 42, 1, 119, 3, 108, 116, 114, 168, 156, 181, 228, 207, 14, 43, 1, 119, 3, 108, 116, 114, 135, 156, 181, 228, 207, 14, 33, 1, 40, 0, 156, 181, 228, 207, 14, 46, 6, 95, 95, 116, 121, 112, 101, 1, 119, 4, 116, 101, 120, 116, 40, 0, 156, 181, 228, 207, 14, 46, 8, 95, 95, 102, 111, 114, 109, 97, 116, 1, 125, 0, 40, 0, 156, 181, 228, 207, 14, 46, 7, 95, 95, 115, 116, 121, 108, 101, 1, 119, 0, 40, 0, 156, 181, 228, 207, 14, 46, 6, 95, 95, 109, 111, 100, 101, 1, 125, 0, 40, 0, 156, 181, 228, 207, 14, 46, 8, 95, 95, 100, 101, 116, 97, 105, 108, 1, 125, 0, 132, 156, 181, 228, 207, 14, 46, 1, 99, 129, 156, 181, 228, 207, 14, 21, 1, 0, 5, 135, 156, 181, 228, 207, 14, 53, 6, 40, 0, 156, 181, 228, 207, 14, 59, 6, 95, 95, 116, 121, 112, 101, 1, 119, 8, 108, 105, 115, 116, 105, 116, 101, 109, 40, 0, 156, 181, 228, 207, 14, 59, 8, 95, 95, 102, 111, 114, 109, 97, 116, 1, 125, 0, 40, 0, 156, 181, 228, 207, 14, 59, 8, 95, 95, 105, 110, 100, 101, 110, 116, 1, 125, 0, 33, 0, 156, 181, 228, 207, 14, 59, 5, 95, 95, 100, 105, 114, 1, 40, 0, 156, 181, 228, 207, 14, 59, 7, 95, 95, 118, 97, 108, 117, 101, 1, 125, 2, 7, 0, 156, 181, 228, 207, 14, 59, 6, 40, 0, 156, 181, 228, 207, 14, 65, 6, 95, 95, 116, 121, 112, 101, 1, 119, 4, 108, 105, 115, 116, 40, 0, 156, 181, 228, 207, 14, 65, 8, 95, 95, 102, 111, 114, 109, 97, 116, 1, 125, 0, 40, 0, 156, 181, 228, 207, 14, 65, 8, 95, 95, 105, 110, 100, 101, 110, 116, 1, 125, 0, 40, 0, 156, 181, 228, 207, 14, 65, 5, 95, 95, 100, 105, 114, 1, 119, 3, 108, 116, 114, 40, 0, 156, 181, 228, 207, 14, 65, 10, 95, 95, 108, 105, 115, 116, 84, 121, 112, 101, 1, 119, 6, 110, 117, 109, 98, 101, 114, 40, 0, 156, 181, 228, 207, 14, 65, 5, 95, 95, 116, 97, 103, 1, 119, 2, 111, 108, 40, 0, 156, 181, 228, 207, 14, 65, 7, 95, 95, 115, 116, 97, 114, 116, 1, 125, 1, 7, 0, 156, 181, 228, 207, 14, 65, 6, 40, 0, 156, 181, 228, 207, 14, 73, 6, 95, 95, 116, 121, 112, 101, 1, 119, 8, 108, 105, 115, 116, 105, 116, 101, 109, 40, 0, 156, 181, 228, 207, 14, 73, 8, 95, 95, 102, 111, 114, 109, 97, 116, 1, 125, 0, 40, 0, 156, 181, 228, 207, 14, 73, 8, 95, 95, 105, 110, 100, 101, 110, 116, 1, 125, 0, 33, 0, 156, 181, 228, 207, 14, 73, 5, 95, 95, 100, 105, 114, 1, 40, 0, 156, 181, 228, 207, 14, 73, 7, 95, 95, 118, 97, 108, 117, 101, 1, 125, 1, 168, 156, 181, 228, 207, 14, 77, 1, 119, 3, 108, 116, 114, 7, 0, 156, 181, 228, 207, 14, 73, 1, 40, 0, 156, 181, 228, 207, 14, 80, 6, 95, 95, 116, 121, 112, 101, 1, 119, 4, 116, 101, 120, 116, 40, 0, 156, 181, 228, 207, 14, 80, 8, 95, 95, 102, 111, 114, 109, 97, 116, 1, 125, 0, 40, 0, 156, 181, 228, 207, 14, 80, 7, 95, 95, 115, 116, 121, 108, 101, 1, 119, 0, 40, 0, 156, 181, 228, 207, 14, 80, 6, 95, 95, 109, 111, 100, 101, 1, 125, 0, 40, 0, 156, 181, 228, 207, 14, 80, 8, 95, 95, 100, 101, 116, 97, 105, 108, 1, 125, 0, 132, 156, 181, 228, 207, 14, 80, 1, 100, 129, 156, 181, 228, 207, 14, 73, 1, 0, 5, 129, 156, 181, 228, 207, 14, 59, 1, 0, 5, 168, 156, 181, 228, 207, 14, 63, 1, 126, 135, 156, 181, 228, 207, 14, 13, 6, 40, 0, 156, 181, 228, 207, 14, 100, 6, 95, 95, 116, 121, 112, 101, 1, 119, 9, 112, 97, 114, 97, 103, 114, 97, 112, 104, 40, 0, 156, 181, 228, 207, 14, 100, 8, 95, 95, 102, 111, 114, 109, 97, 116, 1, 125, 0, 40, 0, 156, 181, 228, 207, 14, 100, 8, 95, 95, 105, 110, 100, 101, 110, 116, 1, 125, 0, 33, 0, 156, 181, 228, 207, 14, 100, 5, 95, 95, 100, 105, 114, 1, 168, 156, 181, 228, 207, 14, 104, 1, 119, 3, 108, 116, 114, 7, 0, 156, 181, 228, 207, 14, 100, 1, 40, 0, 156, 181, 228, 207, 14, 106, 6, 95, 95, 116, 121, 112, 101, 1, 119, 4, 116, 101, 120, 116, 40, 0, 156, 181, 228, 207, 14, 106, 8, 95, 95, 102, 111, 114, 109, 97, 116, 1, 125, 0, 40, 0, 156, 181, 228, 207, 14, 106, 7, 95, 95, 115, 116, 121, 108, 101, 1, 119, 0, 40, 0, 156, 181, 228, 207, 14, 106, 6, 95, 95, 109, 111, 100, 101, 1, 125, 0, 40, 0, 156, 181, 228, 207, 14, 106, 8, 95, 95, 100, 101, 116, 97, 105, 108, 1, 125, 0, 132, 156, 181, 228, 207, 14, 106, 1, 101, 1, 156, 181, 228, 207, 14, 9, 17, 1, 25, 1, 27, 7, 42, 2, 53, 6, 63, 1, 77, 1, 87, 12, 104, 1];
    txn.apply_update(Update::decode_v1(RAW_LEXICAL_STATE_AS_UPDATE).unwrap());

    println!("finished main")
}
